{"version":3,"file":"static/js/769.47e2eb0b.chunk.js","mappings":"qPAEaA,EAAcC,EAAAA,EAAAA,GAAH,qDAKXC,EAAcD,EAAAA,EAAAA,GAAH,kMAcXE,EAAcF,EAAAA,EAAAA,GAAH,8DAIXG,EAAaH,EAAAA,EAAAA,EAAH,qD,SCdR,SAASI,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAASC,EAAAA,EAAAA,MAgBf,OAdAC,EAAAA,EAAAA,YAAU,WAKRC,MAAM,GAAD,OACAC,EAAAA,GADA,kBACsBJ,EAAOK,QAD7B,4BACwDD,EAAAA,GADxD,oBAGFE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GACJR,EAAYQ,EAASE,QACtB,IACAC,MAAMC,QAAQC,QAVlB,GAAE,IAYCd,EAASe,OAAS,GAElB,0BACE,SAACtB,EAAD,UACGO,EAASgB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3B,OACE,UAACxB,EAAD,YACE,SAACC,EAAD,UAAcsB,KACd,SAACrB,EAAD,UAAasB,MAFGF,EAKrB,SAKA,qEAEV,C","sources":["components/reviews/Reviews.styled.jsx","components/reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin: 0;\n  padding: 10px;\n\n  list-style-type: none;\n\n  border-radius: 4px;\n\n  background-color: grey;\n\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const ReviewAutor = styled.h3`\n  margin: 0 0 20px 0;\n  padding: 0;\n`;\nexport const ReviewText = styled.p`\n  margin: 0;\n  padding: 0;\n`;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../api/API';\nimport {\n  ReviewsList,\n  ReviewsItem,\n  ReviewAutor,\n  ReviewText,\n} from './Reviews.styled';\n\nexport default function Reviews() {\n  const [Articles, setArticles] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    fetchArticles();\n  }, []);\n\n  function fetchArticles() {\n    fetch(\n      `${API.BASE_URL}/movie/${params.movieId}/reviews?api_key=${API.API_KEY}&language=en-US`\n    )\n      .then(response => response.json())\n      .then(response => {\n        setArticles(response.results);\n      })\n      .catch(console.error());\n  }\n  if (Articles.length > 0) {\n    return (\n      <div>\n        <ReviewsList>\n          {Articles.map(({ id, author, content }) => {\n            return (\n              <ReviewsItem key={id}>\n                <ReviewAutor>{author}</ReviewAutor>\n                <ReviewText>{content}</ReviewText>\n              </ReviewsItem>\n            );\n          })}\n        </ReviewsList>\n      </div>\n    );\n  } else {\n    return <div>We don`t have any reviews for this movie</div>;\n  }\n}\n"],"names":["ReviewsList","styled","ReviewsItem","ReviewAutor","ReviewText","Reviews","useState","Articles","setArticles","params","useParams","useEffect","fetch","API","movieId","then","response","json","results","catch","console","error","length","map","id","author","content"],"sourceRoot":""}