{"version":3,"file":"static/js/519.b3a81890.chunk.js","mappings":"uPAEaA,EAAgBC,EAAAA,EAAAA,IAAH,8CAIbC,EAAWD,EAAAA,EAAAA,GAAH,+JASRE,EAAWF,EAAAA,EAAAA,GAAH,yPAkBRG,EAAYH,EAAAA,EAAAA,EAAH,kFAKTI,EAAYJ,EAAAA,EAAAA,EAAH,kF,SC1BP,SAASK,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAASC,EAAAA,EAAAA,MAgBf,OAdAC,EAAAA,EAAAA,YAAU,WAKRC,MAAM,GAAD,OACAC,EAAAA,GADA,kBACsBJ,EAAOK,QAD7B,4BACwDD,EAAAA,GADxD,oBAGFE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GACJR,EAAYQ,EAASE,KACtB,IACAC,MAAMC,QAAQC,QAVlB,GAAE,IAYEd,GAGH,SAACR,EAAD,WACE,SAACE,EAAD,UACGM,EAASe,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC9C,OACE,UAACxB,EAAD,WACGsB,IACC,gBACEG,IAAG,UAAKd,EAAAA,IAAL,OAA0BW,GAC7BI,IAAKL,EACLM,MAAM,SAGV,SAAC1B,EAAD,oBACA,SAACC,EAAD,UAAYmB,IACXE,IAAa,SAACtB,EAAD,wBACbsB,IAAa,SAACrB,EAAD,UAAYqB,MAXbC,EAclB,QArBe,IAyBvB,C","sources":["components/cast/Cast.styled.jsx","components/cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastContainer = styled.div`\n  //   width: 650px;\n`;\n\nexport const CastList = styled.ul`\n  display: grid;\n  width: 650px;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n\n  margin: -10px;\n  padding: 0;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin: 10px;\n  padding: 10px;\n\n  height: 250px;\n  width: 180px;\n\n  list-style-type: none;\n\n  border-radius: 4px;\n\n  background-color: grey;\n`;\n\nexport const CastTextB = styled.b`\n  margin: 2px 0;\n  padding: 0px;\n  text-align: center;\n`;\nexport const CastTextP = styled.p`\n  margin: 2px 0;\n  padding: 0px;\n  text-align: center;\n`;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../api/API';\nimport {\n  CastContainer,\n  CastList,\n  CastItem,\n  CastTextB,\n  CastTextP,\n} from './Cast.styled';\n\nexport default function Cast() {\n  const [Articles, setArticles] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    fetchArticles();\n  }, []);\n\n  function fetchArticles() {\n    fetch(\n      `${API.BASE_URL}/movie/${params.movieId}/credits?api_key=${API.API_KEY}&language=en-US`\n    )\n      .then(response => response.json())\n      .then(response => {\n        setArticles(response.cast);\n      })\n      .catch(console.error());\n  }\n  if (!Articles) return null;\n\n  return (\n    <CastContainer>\n      <CastList>\n        {Articles.map(({ name, profile_path, character, id }) => {\n          return (\n            <CastItem key={id}>\n              {profile_path && (\n                <img\n                  src={`${API.IMAGE_BASE_URL}${profile_path}`}\n                  alt={name}\n                  width=\"100\"\n                />\n              )}\n              <CastTextB>name</CastTextB>\n              <CastTextP>{name}</CastTextP>\n              {character && <CastTextB>character</CastTextB>}\n              {character && <CastTextP>{character}</CastTextP>}\n            </CastItem>\n          );\n        })}\n      </CastList>\n    </CastContainer>\n  );\n}\n"],"names":["CastContainer","styled","CastList","CastItem","CastTextB","CastTextP","Cast","useState","Articles","setArticles","params","useParams","useEffect","fetch","API","movieId","then","response","json","cast","catch","console","error","map","name","profile_path","character","id","src","alt","width"],"sourceRoot":""}